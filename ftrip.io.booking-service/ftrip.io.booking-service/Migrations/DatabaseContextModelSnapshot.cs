// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ftrip.io.booking_service.Persistance;

namespace ftrip.io.booking_service.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ftrip.io.booking_service.AccommodationConfiguration.Domain.Accommodation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AccommodationId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("HostId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsManualAccept")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Accommodations");
                });

            modelBuilder.Entity("ftrip.io.booking_service.ReservationRequests.Domain.ReservationRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AccomodationId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("GuestId")
                        .HasColumnType("char(36)");

                    b.Property<int>("GuestNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("ReservationRequests");
                });

            modelBuilder.Entity("ftrip.io.booking_service.Reservations.Domain.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AccomodationId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("GuestId")
                        .HasColumnType("char(36)");

                    b.Property<int>("GuestNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("ftrip.io.booking_service.Reviews.Domain.AccomodationReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AccomodationId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("GuestId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("AccomodationId")
                        .HasAnnotation("SqlServer:Include", new[] { "Grades" });

                    b.ToTable("AccomodationReviews");
                });

            modelBuilder.Entity("ftrip.io.booking_service.Reviews.Domain.AccomodationReviewsSummary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AccomodationId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ReviewsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccomodationId")
                        .IsUnique()
                        .HasAnnotation("SqlServer:Include", new[] { "ReviewsCount", "Grades" });

                    b.ToTable("AccomodationReviewsSummaries");
                });

            modelBuilder.Entity("ftrip.io.booking_service.Reviews.Domain.HostReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("GuestId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("HostId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("HostId")
                        .HasAnnotation("SqlServer:Include", new[] { "Grades" });

                    b.ToTable("HostReviews");
                });

            modelBuilder.Entity("ftrip.io.booking_service.Reviews.Domain.HostReviewsSummary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("HostId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ReviewsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HostId")
                        .IsUnique()
                        .HasAnnotation("SqlServer:Include", new[] { "ReviewsCount", "Grades" });

                    b.ToTable("HostReviewsSummaries");
                });

            modelBuilder.Entity("ftrip.io.booking_service.ReservationRequests.Domain.ReservationRequest", b =>
                {
                    b.OwnsOne("ftrip.io.booking_service.Common.Domain.DatePeriod", "DatePeriod", b1 =>
                        {
                            b1.Property<Guid>("ReservationRequestId")
                                .HasColumnType("char(36)");

                            b1.Property<DateTime>("DateFrom")
                                .HasColumnType("datetime(6)");

                            b1.Property<DateTime>("DateTo")
                                .HasColumnType("datetime(6)");

                            b1.HasKey("ReservationRequestId");

                            b1.ToTable("ReservationRequests");

                            b1.WithOwner()
                                .HasForeignKey("ReservationRequestId");
                        });
                });

            modelBuilder.Entity("ftrip.io.booking_service.Reservations.Domain.Reservation", b =>
                {
                    b.OwnsOne("ftrip.io.booking_service.Common.Domain.DatePeriod", "DatePeriod", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("char(36)");

                            b1.Property<DateTime>("DateFrom")
                                .HasColumnType("datetime(6)");

                            b1.Property<DateTime>("DateTo")
                                .HasColumnType("datetime(6)");

                            b1.HasKey("ReservationId");

                            b1.ToTable("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("ReservationId");
                        });
                });

            modelBuilder.Entity("ftrip.io.booking_service.Reviews.Domain.AccomodationReview", b =>
                {
                    b.OwnsOne("ftrip.io.booking_service.Reviews.Domain.AccomodationGrades", "Grades", b1 =>
                        {
                            b1.Property<Guid>("AccomodationReviewId")
                                .HasColumnType("char(36)");

                            b1.Property<int>("Accomodation")
                                .HasColumnName("AccomodationGrade")
                                .HasColumnType("int");

                            b1.Property<int>("Location")
                                .HasColumnName("LocationGrade")
                                .HasColumnType("int");

                            b1.Property<int>("ValueForMoney")
                                .HasColumnName("ValueForMoneyGrade")
                                .HasColumnType("int");

                            b1.HasKey("AccomodationReviewId");

                            b1.ToTable("AccomodationReviews");

                            b1.WithOwner()
                                .HasForeignKey("AccomodationReviewId");
                        });

                    b.OwnsOne("ftrip.io.booking_service.Reviews.Domain.AccomodationRecension", "Recension", b1 =>
                        {
                            b1.Property<Guid>("AccomodationReviewId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Text")
                                .HasColumnName("RecensionText")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.HasKey("AccomodationReviewId");

                            b1.ToTable("AccomodationReviews");

                            b1.WithOwner()
                                .HasForeignKey("AccomodationReviewId");
                        });
                });

            modelBuilder.Entity("ftrip.io.booking_service.Reviews.Domain.AccomodationReviewsSummary", b =>
                {
                    b.OwnsOne("ftrip.io.booking_service.Reviews.Domain.AccomodationGradesSummary", "Grades", b1 =>
                        {
                            b1.Property<Guid>("AccomodationReviewsSummaryId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Accomodation")
                                .HasColumnName("AccomodationGrade")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<decimal>("Location")
                                .HasColumnName("LocationGrade")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<decimal>("ValueForMoney")
                                .HasColumnName("ValueForMoneyGrade")
                                .HasColumnType("decimal(65,30)");

                            b1.HasKey("AccomodationReviewsSummaryId");

                            b1.ToTable("AccomodationReviewsSummaries");

                            b1.WithOwner()
                                .HasForeignKey("AccomodationReviewsSummaryId");
                        });
                });

            modelBuilder.Entity("ftrip.io.booking_service.Reviews.Domain.HostReview", b =>
                {
                    b.OwnsOne("ftrip.io.booking_service.Reviews.Domain.HostGrades", "Grades", b1 =>
                        {
                            b1.Property<Guid>("HostReviewId")
                                .HasColumnType("char(36)");

                            b1.Property<int>("Communication")
                                .HasColumnName("CommunicationGrade")
                                .HasColumnType("int");

                            b1.Property<int>("Overall")
                                .HasColumnName("OverallGrade")
                                .HasColumnType("int");

                            b1.HasKey("HostReviewId");

                            b1.ToTable("HostReviews");

                            b1.WithOwner()
                                .HasForeignKey("HostReviewId");
                        });

                    b.OwnsOne("ftrip.io.booking_service.Reviews.Domain.HostRecension", "Recension", b1 =>
                        {
                            b1.Property<Guid>("HostReviewId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Text")
                                .HasColumnName("RecensionText")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.HasKey("HostReviewId");

                            b1.ToTable("HostReviews");

                            b1.WithOwner()
                                .HasForeignKey("HostReviewId");
                        });
                });

            modelBuilder.Entity("ftrip.io.booking_service.Reviews.Domain.HostReviewsSummary", b =>
                {
                    b.OwnsOne("ftrip.io.booking_service.Reviews.Domain.HostGradesSummary", "Grades", b1 =>
                        {
                            b1.Property<Guid>("HostReviewsSummaryId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Communication")
                                .HasColumnName("CommunicationGrade")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<decimal>("Overall")
                                .HasColumnName("OverallGrade")
                                .HasColumnType("decimal(65,30)");

                            b1.HasKey("HostReviewsSummaryId");

                            b1.ToTable("HostReviewsSummaries");

                            b1.WithOwner()
                                .HasForeignKey("HostReviewsSummaryId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
